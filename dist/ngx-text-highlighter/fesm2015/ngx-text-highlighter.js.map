{"version":3,"file":"ngx-text-highlighter.js.map","sources":["ng://ngx-text-highlighter/lib/ngx-text-highlighter.service.ts","ng://ngx-text-highlighter/lib/services/events.service.ts","ng://ngx-text-highlighter/lib/ngx-text-highlighter.component.ts","ng://ngx-text-highlighter/lib/components/textarea/textarea.component.ts","ng://ngx-text-highlighter/lib/components/stored-highlights/stored-highlights.component.ts","ng://ngx-text-highlighter/lib/components/marker/marker.component.ts","ng://ngx-text-highlighter/lib/pipes/safe-html.pipe.ts","ng://ngx-text-highlighter/lib/ngx-text-highlighter.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTextHighlighterService {\n\n  constructor() { }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  event: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n  // Dispatch events across components\n  dispatch(event) {\n    this.event.emit(event);\n  }\n\n  // Listens to dispatched events\n  listen() {\n    return this.event;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, OnDestroy, Input } from '@angular/core';\nimport { EventsService } from './services/events.service';\n\n@Component({\n  selector: 'th-container',\n  template: `\n    <th-marker [markerStyle]=\"markerStyle\"></th-marker>\n    <th-textarea></th-textarea>\n    <th-stored-highlights></th-stored-highlights>\n  `,\n  styles: []\n})\nexport class NgxTextHighlighterComponent implements OnInit, OnDestroy {\n  @Output() textSelection: EventEmitter<{}> = new EventEmitter();\n  @Input('markerStyle') markerStyle = 'fixed';\n  constructor(protected events: EventsService) { }\n\n  ngOnInit() {\n    // Listens to events from child components\n    this.events.listen().subscribe(event => {\n      // Check event origin (which component dispatched this event)\n      switch (event.origin) {\n        // Events coming from the textarea component\n        case ('textarea'):\n          // Emit event to the library component output\n          this.textSelection.emit({selection: event.selection, mouseEvent: event.mouseEvent});\n        break;\n\n        default:\n        break;\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.events.listen().unsubscribe();\n  }\n\n}\n","import { Component, OnInit, ViewChild, Inject, EventEmitter, Output } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'th-textarea',\n  template: `    <div class=\"textarea\"\n        (mouseup)=\"onSelection($event)\"\n        [attr.contenteditable]=\"true\"\n        (blur)=\"onTextAreaBlur()\">\n    </div>\n`,\n  styles: [`.textarea{height:250px;overflow:auto;background-color:#f1f1f1;padding:20px;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);border-radius:2px;line-height:2em}.textarea:focus{outline:0}`]\n})\n\nexport class TextareaComponent implements OnInit {\n  savedSelection: Range | null;\n  selectedText: string;\n\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(@Inject (DOCUMENT) private _document: any, private events: EventsService) { }\n\n  ngOnInit() {\n    // Listen to events\n    this.events.listen().subscribe((event) => {\n      // Marker events\n      if (event.origin === 'marker' && event.type === 'highlight') {\n        // Highlight text\n        this.marker(event.color, this.selectedText);\n      }\n    });\n  }\n\n  restoreSelection(): boolean {\n    if (this.savedSelection) {\n      if (window.getSelection) {\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(this.savedSelection);\n        return true;\n      } else if (this._document.getSelection) {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  marker(color: string, text: string): void {\n    // We have a selection?\n    if (this.restoreSelection()) {\n      // Execute background color\n      this._document.execCommand('hiliteColor', false, color);\n      // Trigger stored highlights\n      this.events.dispatch({origin: 'textarea', type: 'store', color: color, text: text});\n    }\n  }\n  onTextAreaBlur() {\n    // Browser supports getSelection()?\n    if (window.getSelection) {\n      // Get selection\n      const selection = window.getSelection();\n      // Browser support range?\n      if (selection.getRangeAt && selection.rangeCount) {\n        // Get range and selected text\n        this.savedSelection = selection.getRangeAt(0);\n        this.selectedText = selection.toString();\n      }\n    } else if (this._document.getSelection && this._document.createRange) {\n      this.savedSelection = document.createRange();\n    } else {\n      this.savedSelection = null;\n    }\n\n  }\n\n  // Get selection before blur (for floating marker)\n  onSelection($event) {\n    const selection = window.getSelection();\n    if (selection.type === 'Range') {\n      this.events.dispatch({origin: 'textarea', type: 'selection', value: selection});\n    }\n\n    // Selection is not a range, means the user just places caret in another place, let's let the floating marker knows about it\n    if (selection.type !== 'Range') {\n      this.events.dispatch({origin: 'textarea', type: 'blur'});\n    }\n  }\n\n\n}\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'th-stored-highlights',\n  template: `<ul>\n<li *ngFor=\"let item of store\" [ngStyle]=\"{'background-color': item.color}\">{{item.text}}</li>\n</ul>\n`,\n  styles: [``]\n})\nexport class StoredHighlightsComponent implements OnInit {\n  @Input('store') store = [];\n  constructor(protected events: EventsService) { }\n\n  ngOnInit() {\n    this.events.listen().subscribe((event) => {\n      if (event.origin === 'textarea' && event.type === 'store') {\n        this.store.push({text: event.text, color: event.color});\n      }\n    });\n  }\n\n}\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'th-marker',\n  template: `<div class=\"fixed colors\" *ngIf=\"markerStyle === 'fixed'\">\n  <div class=\"color\" *ngFor=\"let color of colors\" [ngStyle]=\"{'background-color': color}\" (click)=\"mark(color)\"></div>\n</div>\n\n<div #floatingMarker class=\"floating colors\" *ngIf=\"markerStyle === 'float'\" [ngStyle]=\"{'left': positionX+'px', 'top': positionY+'px', 'visibility': visibility}\">\n    <div class=\"color\" *ngFor=\"let color of colors\" [ngStyle]=\"{'background-color': color}\" (click)=\"mark(color)\"></div>\n</div>\n`,\n  styles: [`.colors.fixed{width:100%;display:flex;flex-wrap:wrap}.fixed>.color{width:30px;height:30px;margin:0 10px 10px 0;cursor:pointer;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transition:.3s cubic-bezier(.25,.8,.25,1)}.fixed>.color:hover{border-radius:50%;box-shadow:0 10px 10px rgba(0,0,0,.25),0 5px 5px rgba(0,0,0,.22)}.colors.floating{position:absolute;width:auto;background-color:#404040;border-radius:2px;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transition:top .3s cubic-bezier(.25,.8,.25,1);display:flex}.floating>.color{margin:10px;cursor:pointer;width:30px;height:30px;transition:top .3s cubic-bezier(.25,.8,.25,1),border-radius .3s cubic-bezier(.25,.8,.25,1);z-index:10}.floating>.color:hover{border-radius:50%}.floating.colors:after{content:'';display:block;position:absolute;background-color:#404040;width:20px;height:20px;bottom:-5px;left:calc(50% - 10px);-webkit-transform:rotate(45deg);transform:rotate(45deg);z-index:1}`]\n})\nexport class MarkerComponent implements OnInit {\n  colors = ['#f44336', '#ffeb3b', '#4caf50'];\n  positionX = 0;\n  positionY = 0;\n  visibility = 'hidden';\n  @Input('markerStyle') markerStyle = 'fixed';\n  @ViewChild('floatingMarker') floatingMarker: any;\n  constructor(protected events: EventsService) { }\n\n  ngOnInit() {\n    this.events.listen().subscribe((event) => {\n      // Event from textarea regarding text selection and marker style is set to float\n      if (event.origin === 'textarea' && event.type === 'selection' && this.markerStyle === 'float') {\n        // Our maker width is auto (TODO: colors can be added as an input), let's get its computed width\n        const markerWidth = window.getComputedStyle(this.floatingMarker.nativeElement).width;\n        // Selection width and height from range bounding rectangle\n        const selectionWidth = event.value.getRangeAt(0).getBoundingClientRect().width;\n        const xCenter = (parseInt(markerWidth, 0) - selectionWidth) / 2;\n\n\n        this.positionX = event.value.getRangeAt(0).getBoundingClientRect().left - xCenter;\n        // 64px = 4em (double the line height)\n        this.positionY = event.value.getRangeAt(0).getBoundingClientRect().top - 64;\n\n        // Let's show our floating marker\n        this.visibility = 'visible';\n      }\n\n      // Event from textarea regarding losing focus and marker style is set to float\n      if (event.origin === 'textarea' && event.type === 'blur' && this.markerStyle === 'float') {\n        // Let's hide our floating marker\n        this.visibility = 'hidden';\n      }\n    });\n  }\n\n  mark(color) {\n    this.events.dispatch({\n      origin: 'marker',\n      type: 'highlight',\n      color: color\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeValue } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(html: string): SafeValue {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxTextHighlighterComponent } from './ngx-text-highlighter.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { StoredHighlightsComponent } from './components/stored-highlights/stored-highlights.component';\nimport { MarkerComponent } from './components/marker/marker.component';\nimport { CommonModule } from '@angular/common';\nimport { EventsService } from './services/events.service';\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgxTextHighlighterComponent,\n    TextareaComponent,\n    StoredHighlightsComponent,\n    MarkerComponent,\n    SafeHtmlPipe\n  ],\n  exports: [NgxTextHighlighterComponent]\n})\nexport class NgxTextHighlighterModule { }\n"],"names":[],"mappings":"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"}
