{"version":3,"file":"ngx-text-highlighter.umd.js.map","sources":["ng://ngx-text-highlighter/lib/ngx-text-highlighter.service.ts","ng://ngx-text-highlighter/lib/services/events.service.ts","ng://ngx-text-highlighter/lib/ngx-text-highlighter.component.ts","ng://ngx-text-highlighter/lib/components/textarea/textarea.component.ts","ng://ngx-text-highlighter/lib/components/stored-highlights/stored-highlights.component.ts","ng://ngx-text-highlighter/lib/components/marker/marker.component.ts","ng://ngx-text-highlighter/lib/pipes/safe-html.pipe.ts","ng://ngx-text-highlighter/lib/ngx-text-highlighter.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxTextHighlighterService {\n\n  constructor() { }\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n  event: EventEmitter<any> = new EventEmitter();\n\n  constructor() { }\n  // Dispatch events across components\n  dispatch(event) {\n    this.event.emit(event);\n  }\n\n  // Listens to dispatched events\n  listen() {\n    return this.event;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter, OnDestroy, Input } from '@angular/core';\nimport { EventsService } from './services/events.service';\n\n@Component({\n  selector: 'th-container',\n  template: `\n    <th-marker [markerStyle]=\"markerStyle\"></th-marker>\n    <th-textarea></th-textarea>\n    <th-stored-highlights></th-stored-highlights>\n  `,\n  styles: []\n})\nexport class NgxTextHighlighterComponent implements OnInit, OnDestroy {\n  @Output() textSelection: EventEmitter<{}> = new EventEmitter();\n  @Input('markerStyle') markerStyle = 'fixed';\n  constructor(protected events: EventsService) { }\n\n  ngOnInit() {\n    // Listens to events from child components\n    this.events.listen().subscribe(event => {\n      // Check event origin (which component dispatched this event)\n      switch (event.origin) {\n        // Events coming from the textarea component\n        case ('textarea'):\n          // Emit event to the library component output\n          this.textSelection.emit({selection: event.selection, mouseEvent: event.mouseEvent});\n        break;\n\n        default:\n        break;\n      }\n    });\n\n  }\n\n  ngOnDestroy() {\n    this.events.listen().unsubscribe();\n  }\n\n}\n","import { Component, OnInit, ViewChild, Inject, EventEmitter, Output } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'th-textarea',\n  template: `    <div class=\"textarea\"\n        (mouseup)=\"onSelection($event)\"\n        [attr.contenteditable]=\"true\"\n        (blur)=\"onTextAreaBlur()\">\n    </div>\n`,\n  styles: [`.textarea{height:250px;overflow:auto;background-color:#f1f1f1;padding:20px;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);border-radius:2px;line-height:2em}.textarea:focus{outline:0}`]\n})\n\nexport class TextareaComponent implements OnInit {\n  savedSelection: Range | null;\n  selectedText: string;\n\n  @Output() blur: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(@Inject (DOCUMENT) private _document: any, private events: EventsService) { }\n\n  ngOnInit() {\n    // Listen to events\n    this.events.listen().subscribe((event) => {\n      // Marker events\n      if (event.origin === 'marker' && event.type === 'highlight') {\n        // Highlight text\n        this.marker(event.color, this.selectedText);\n      }\n    });\n  }\n\n  restoreSelection(): boolean {\n    if (this.savedSelection) {\n      if (window.getSelection) {\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(this.savedSelection);\n        return true;\n      } else if (this._document.getSelection) {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  marker(color: string, text: string): void {\n    // We have a selection?\n    if (this.restoreSelection()) {\n      // Execute background color\n      this._document.execCommand('hiliteColor', false, color);\n      // Trigger stored highlights\n      this.events.dispatch({origin: 'textarea', type: 'store', color: color, text: text});\n    }\n  }\n  onTextAreaBlur() {\n    // Loses focus? Let the floating marker knows about it\n    this.events.dispatch({origin: 'textarea', type: 'blur'});\n    // Browser supports getSelection()?\n    if (window.getSelection) {\n      // Get selection\n      const selection = window.getSelection();\n      // Browser support range?\n      if (selection.getRangeAt && selection.rangeCount) {\n        // Get range and selected text\n        this.savedSelection = selection.getRangeAt(0);\n        this.selectedText = selection.toString();\n      }\n    } else if (this._document.getSelection && this._document.createRange) {\n      this.savedSelection = document.createRange();\n    } else {\n      this.savedSelection = null;\n    }\n  }\n\n  // Get selection before blur (for floating marker)\n  onSelection($event) {\n    const selection = window.getSelection();\n    if (selection.type === 'Range') {\n      this.events.dispatch({origin: 'textarea', type: 'selection', value: selection});\n    }\n\n    // Selection is not a range, user clicked inside user area to hide floating marker\n    if (selection.type !== 'Range') {\n      this.events.dispatch({origin: 'textarea', type: 'blur'});\n    }\n  }\n\n\n}\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'th-stored-highlights',\n  template: `<ul>\n<li *ngFor=\"let item of store\" [ngStyle]=\"{'background-color': item.color}\">{{item.text}}</li>\n</ul>\n`,\n  styles: [``]\n})\nexport class StoredHighlightsComponent implements OnInit {\n  @Input('store') store = [];\n  constructor(protected events: EventsService) { }\n\n  ngOnInit() {\n    this.events.listen().subscribe((event) => {\n      if (event.origin === 'textarea' && event.type === 'store') {\n        this.store.push({text: event.text, color: event.color});\n      }\n    });\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { EventsService } from '../../services/events.service';\n\n@Component({\n  selector: 'th-marker',\n  template: `<div class=\"fixed colors\" *ngIf=\"markerStyle === 'fixed'\">\n  <div class=\"color\" *ngFor=\"let color of colors\" [ngStyle]=\"{'background-color': color}\" (click)=\"mark(color)\"></div>\n</div>\n\n<div class=\"floating colors\" *ngIf=\"markerStyle === 'float'\" [ngStyle]=\"{'left': positionX+'px', 'top': positionY+'px', 'visibility': visibility}\">\n    <div class=\"color\" *ngFor=\"let color of colors\" [ngStyle]=\"{'background-color': color}\" (click)=\"mark(color)\"></div>\n</div>\n`,\n  styles: [`.colors.fixed{width:100%;display:flex;flex-wrap:wrap}.fixed>.color{width:30px;height:30px;margin:0 10px 10px 0;cursor:pointer;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transition:.3s cubic-bezier(.25,.8,.25,1)}.fixed>.color:hover{border-radius:50%;box-shadow:0 10px 10px rgba(0,0,0,.25),0 5px 5px rgba(0,0,0,.22)}.colors.floating{position:absolute;width:auto;background-color:#404040;border-radius:2px;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transition:top .3s cubic-bezier(.25,.8,.25,1);display:flex}.floating>.color{margin:10px;cursor:pointer;width:30px;height:30px;transition:top .3s cubic-bezier(.25,.8,.25,1),border-radius .3s cubic-bezier(.25,.8,.25,1)}.floating>.color:hover{border-radius:50%}`]\n})\nexport class MarkerComponent implements OnInit {\n  colors = ['#f44336', '#ffeb3b', '#4caf50'];\n  positionX = 0;\n  positionY = 0;\n  visibility = 'hidden';\n  @Input('markerStyle') markerStyle = 'fixed';\n  constructor(protected events: EventsService) { }\n\n  ngOnInit() {\n    this.events.listen().subscribe((event) => {\n      // Event from textarea regarding text selection and marker style is set to float\n      if (event.origin === 'textarea' && event.type === 'selection' && this.markerStyle === 'float') {\n        // let get selection bounding rectangle\n        this.positionX = event.value.getRangeAt(0).getBoundingClientRect().left;\n        this.positionY = event.value.getRangeAt(0).getBoundingClientRect().top;\n        console.log('selection')\n        // Let's show our floating marker\n        this.visibility = 'visible';\n      }\n\n      // Event from textarea regarding losing focus and marker style is set to float\n      if (event.origin === 'textarea' && event.type === 'blur' && this.markerStyle === 'float') {\n        console.log('loses focus')\n        // Let's hide our floating marker\n        this.visibility = 'hidden';\n      }\n    });\n  }\n\n  mark(color) {\n    this.events.dispatch({\n      origin: 'marker',\n      type: 'highlight',\n      color: color\n    });\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeValue } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'safeHtml'\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  transform(html: string): SafeValue {\n    return this.sanitizer.bypassSecurityTrustHtml(html);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxTextHighlighterComponent } from './ngx-text-highlighter.component';\nimport { TextareaComponent } from './components/textarea/textarea.component';\nimport { StoredHighlightsComponent } from './components/stored-highlights/stored-highlights.component';\nimport { MarkerComponent } from './components/marker/marker.component';\nimport { CommonModule } from '@angular/common';\nimport { EventsService } from './services/events.service';\nimport { SafeHtmlPipe } from './pipes/safe-html.pipe';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    NgxTextHighlighterComponent,\n    TextareaComponent,\n    StoredHighlightsComponent,\n    MarkerComponent,\n    SafeHtmlPipe\n  ],\n  exports: [NgxTextHighlighterComponent]\n})\nexport class NgxTextHighlighterModule { }\n"],"names":["Injectable","EventEmitter","Component","Output","Input","Inject","DOCUMENT","Pipe","DomSanitizer","NgModule","CommonModule"],"mappings":";;;;;;;;;;AAAA;QAOE;SAAiB;;oBALlBA,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;wCAJD;;;;;;;ACAA;QAQE;yBAF2B,IAAIC,eAAY,EAAE;SAE5B;;;;;;QAEjB,gCAAQ;;;;YAAR,UAAS,KAAK;gBACZ,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB;;;;;QAGD,8BAAM;;;YAAN;gBACE,OAAO,IAAI,CAAC,KAAK,CAAC;aACnB;;oBAfFD,aAAU,SAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;;4BAJD;;;;;;;ACAA;QAeE,qCAAsB,MAAqB;YAArB,WAAM,GAAN,MAAM,CAAe;iCAFC,IAAIC,eAAY,EAAE;+BAC1B,OAAO;SACK;;;;QAEhD,8CAAQ;;;YAAR;gBAAA,iBAgBC;;gBAdC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAA,KAAK;;oBAElC,QAAQ,KAAK,CAAC,MAAM;;wBAElB,MAAM,UAAU;;;4BAEd,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,KAAK,CAAC,SAAS,EAAE,UAAU,EAAE,KAAK,CAAC,UAAU,EAAC,CAAC,CAAC;4BACtF,MAAM;wBAEN;4BACA,MAAM;qBACP;iBACF,CAAC,CAAC;aAEJ;;;;QAED,iDAAW;;;YAAX;gBACE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,WAAW,EAAE,CAAC;aACpC;;oBAlCFC,YAAS,SAAC;wBACT,QAAQ,EAAE,cAAc;wBACxB,QAAQ,EAAE,qJAIT;wBACD,MAAM,EAAE,EAAE;qBACX;;;;;wBAVQ,aAAa;;;;oCAYnBC,SAAM;kCACNC,QAAK,SAAC,aAAa;;0CAdtB;;;;;;;ACAA;QAqBE,2BAAuC,SAAc,EAAU,MAAqB;YAA7C,cAAS,GAAT,SAAS,CAAK;YAAU,WAAM,GAAN,MAAM,CAAe;wBAF7C,IAAIH,eAAY,EAAU;SAEwB;;;;QAEzF,oCAAQ;;;YAAR;gBAAA,iBASC;;gBAPC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;;oBAEnC,IAAI,KAAK,CAAC,MAAM,KAAK,QAAQ,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,EAAE;;;wBAE3D,KAAI,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,EAAE,KAAI,CAAC,YAAY,CAAC,CAAC;qBAC7C;iBACF,CAAC,CAAC;aACJ;;;;QAED,4CAAgB;;;YAAhB;gBACE,IAAI,IAAI,CAAC,cAAc,EAAE;oBACvB,IAAI,MAAM,CAAC,YAAY,EAAE;;wBACvB,IAAM,GAAG,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;wBAClC,GAAG,CAAC,eAAe,EAAE,CAAC;wBACtB,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;wBAClC,OAAO,IAAI,CAAC;qBACb;yBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;wBACtC,OAAO,IAAI,CAAC;qBACb;iBACF;qBAAM;oBACL,OAAO,KAAK,CAAC;iBACd;aACF;;;;;;QAED,kCAAM;;;;;YAAN,UAAO,KAAa,EAAE,IAAY;;gBAEhC,IAAI,IAAI,CAAC,gBAAgB,EAAE,EAAE;;oBAE3B,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,aAAa,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;;oBAExD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;iBACrF;aACF;;;;QACD,0CAAc;;;YAAd;;gBAEE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;;gBAEzD,IAAI,MAAM,CAAC,YAAY,EAAE;;oBAEvB,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;;oBAExC,IAAI,SAAS,CAAC,UAAU,IAAI,SAAS,CAAC,UAAU,EAAE;;wBAEhD,IAAI,CAAC,cAAc,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;wBAC9C,IAAI,CAAC,YAAY,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;qBAC1C;iBACF;qBAAM,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;oBACpE,IAAI,CAAC,cAAc,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;iBAC5B;aACF;;;;;;QAGD,uCAAW;;;;YAAX,UAAY,MAAM;;gBAChB,IAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;gBACxC,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,SAAS,EAAC,CAAC,CAAC;iBACjF;;gBAGD,IAAI,SAAS,CAAC,IAAI,KAAK,OAAO,EAAE;oBAC9B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAC,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;iBAC1D;aACF;;oBArFFC,YAAS,SAAC;wBACT,QAAQ,EAAE,aAAa;wBACvB,QAAQ,EAAE,qKAKX;wBACC,MAAM,EAAE,CAAC,wMAAwM,CAAC;qBACnN;;;;;wDAQcG,SAAM,SAAEC,eAAQ;wBAnBtB,aAAa;;;;2BAiBnBH,SAAM;;gCAnBT;;;;;;;ACAA;QAaE,mCAAsB,MAAqB;YAArB,WAAM,GAAN,MAAM,CAAe;yBADnB,EAAE;SACsB;;;;QAEhD,4CAAQ;;;YAAR;gBAAA,iBAMC;gBALC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;oBACnC,IAAI,KAAK,CAAC,MAAM,KAAK,UAAU,IAAI,KAAK,CAAC,IAAI,KAAK,OAAO,EAAE;wBACzD,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,CAAC,CAAC;qBACzD;iBACF,CAAC,CAAC;aACJ;;oBAlBFD,YAAS,SAAC;wBACT,QAAQ,EAAE,sBAAsB;wBAChC,QAAQ,EAAE,mHAGX;wBACC,MAAM,EAAE,CAAC,EAAE,CAAC;qBACb;;;;;wBATQ,aAAa;;;;4BAWnBE,QAAK,SAAC,OAAO;;wCAZhB;;;;;;;ACAA;QAqBE,yBAAsB,MAAqB;YAArB,WAAM,GAAN,MAAM,CAAe;0BALlC,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;6BAC9B,CAAC;6BACD,CAAC;8BACA,QAAQ;+BACe,OAAO;SACK;;;;QAEhD,kCAAQ;;;YAAR;gBAAA,iBAmBC;gBAlBC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,UAAC,KAAK;;oBAEnC,IAAI,KAAK,CAAC,MAAM,KAAK,UAAU,IAAI,KAAK,CAAC,IAAI,KAAK,WAAW,IAAI,KAAI,CAAC,WAAW,KAAK,OAAO,EAAE;;;wBAE7F,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC,IAAI,CAAC;wBACxE,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,qBAAqB,EAAE,CAAC,GAAG,CAAC;wBACvE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;;;wBAExB,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;qBAC7B;;oBAGD,IAAI,KAAK,CAAC,MAAM,KAAK,UAAU,IAAI,KAAK,CAAC,IAAI,KAAK,MAAM,IAAI,KAAI,CAAC,WAAW,KAAK,OAAO,EAAE;wBACxF,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAA;;;wBAE1B,KAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;qBAC5B;iBACF,CAAC,CAAC;aACJ;;;;;QAED,8BAAI;;;;YAAJ,UAAK,KAAK;gBACR,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;oBACnB,MAAM,EAAE,QAAQ;oBAChB,IAAI,EAAE,WAAW;oBACjB,KAAK,EAAE,KAAK;iBACb,CAAC,CAAC;aACJ;;oBA/CFF,YAAS,SAAC;wBACT,QAAQ,EAAE,WAAW;wBACrB,QAAQ,EAAE,ifAOX;wBACC,MAAM,EAAE,CAAC,0uBAA0uB,CAAC;qBACrvB;;;;;wBAbQ,aAAa;;;;kCAmBnBE,QAAK,SAAC,aAAa;;8BApBtB;;;;;;;ACAA;QAQE,sBAAoB,SAAuB;YAAvB,cAAS,GAAT,SAAS,CAAc;SAAI;;;;;QAE/C,gCAAS;;;;YAAT,UAAU,IAAY;gBACpB,OAAO,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;aACrD;;oBATFG,OAAI,SAAC;wBACJ,IAAI,EAAE,UAAU;qBACjB;;;;;wBAJQC,4BAAY;;;2BADrB;;;;;;;ACAA;;;;oBASCC,WAAQ,SAAC;wBACR,OAAO,EAAE;4BACPC,mBAAY;yBACb;wBACD,YAAY,EAAE;4BACZ,2BAA2B;4BAC3B,iBAAiB;4BACjB,yBAAyB;4BACzB,eAAe;4BACf,YAAY;yBACb;wBACD,OAAO,EAAE,CAAC,2BAA2B,CAAC;qBACvC;;uCArBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}
